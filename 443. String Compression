class Solution {
public:
    int compress(vector<char>& chars) {
        int n=chars.size();
        vector<char> ans;
        for(int i=0;i<n;i++){
            int count=1;
            while(i+1<n and chars[i]==chars[i+1]){
                count++;
                i++;
            }
            // cout<<chars[i]<<" "<<count<<endl;
            string temp=to_string(count);
            ans.push_back(chars[i]);
            // cout<<temp<<endl;
            if(count>1){
                for(int j=0;j<temp.size();j++){
                    // cout<<temp
                    ans.push_back(temp[j]);
                }
            }
            chars=ans;
        }
        return chars.size();
            
    }
};

// With extra space



class Solution {
public:
    int compress(vector<char>& chars) {
        int n=chars.size();
        int i=0;
        int j=0;
        while(j<n){
            int count=1;
            while(j+count<n and chars[j]==chars[j+count]){
                count++;
            }
            string temp=to_string(count);
            chars[i++]=chars[j];
            j=j+count;
            if(count>1){
                for(int k=0;k<int(temp.size());k++){
                    chars[i++]=temp[k];
                }
            }
        }
        return i;
    }
};

// Without extra space
